#include "DataCollector.h"
#include "UtilLib.h"

// Date constructor
DataCollector::DataCollector()
{
	keys = vector<string>();
	values = vector<string>();
	accessMutex = CreateMutex(NULL, true, NULL);
	if (accessMutex == NULL) {
		printf("DataCollector could not create its mutex\n");
	}
	ReleaseMutex(accessMutex);
}

void DataCollector::addDataPair(string action, string data)
{
	// wait and lock the access mutex
	WaitForSingleObject(accessMutex, INFINITE);

	vector<string>::iterator s = find(keys.begin(), keys.end(), action);
	// if the keys array already contains this key, ignore it
	if (s != keys.end()) {
		// update the values in the vector with the new values
	}
	else {
		keys.push_back(action);
		values.push_back(data);
	}
	ReleaseMutex(accessMutex);
}

string DataCollector::getPostData() {
	return getArgsToString(keys, values, getSize(keys), keys, getSize(keys), "POST");
}