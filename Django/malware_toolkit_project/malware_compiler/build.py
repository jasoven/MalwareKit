import MalwareFeatures
import CodeManager

# main function
# returns a string containing the path to the exe, -1 on failure
def main(features):
    codeManager = CodeManager.CodeManager()
    # add basic things to the bot, standard includes, an id ...
    codeManager.start_basic_bot_sample()
    # malwareFeatures = []
    for feat in features['Execution Conditions']:
        featObj = codeManager.create_feature_object(feat)
        codeManager.add_malware_feature(featObj, 'Execution Conditions')
    for feat in features['Options']:
        featObj = codeManager.create_feature_object(feat)
        codeManager.add_malware_feature(featObj, 'Options')
    for feat in features['On Execution']:
        featObj = codeManager.create_feature_object(feat)
        codeManager.add_malware_feature(featObj, 'On Execution')
    for feat in features['As Remote Action']:
        featObj = codeManager.create_feature_object(feat)
        codeManager.add_malware_feature(featObj, 'As Remote Action')
    # for feat in features:
    #     featObj = codeManager.create_feature_object(feat)
    #     # malwareFeatures.append(featObj)
    #     codeManager.add_malware_feature(feature)

    # feature = MalwareFeatures.HelloFeature()

    # this could probably just happen within the for loop above
    # for feature in malwareFeatures:
        # codeManager.add_malware_feature(feature)

    # builtSample = 'newSample.exe'
    sourceCodeFile = 'newSample.cpp'

    res, botID = codeManager.build_executable(sourceCodeFile)
    return res, botID

if __name__ == "__main__":
    main()
